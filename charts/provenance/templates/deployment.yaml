apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "provenance.fullname" . }}
  labels:
    {{- include "provenance.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "provenance.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "provenance.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "provenance.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.redis.enabled }}
      initContainers:
        - name: wait-for-redis
          image: busybox:1.36
          command:
            - sh
            - -c
            - >
              until nc -z {{ include "provenance.redisFullname" . }} {{ .Values.redis.service.port }};
              do echo "waiting for redis";
              sleep 2;
              done
      {{- end }}
      containers:
        - name: provenance
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8000
          {{- $envMap := .Values.env | default dict }}
          {{- $extraEnvList := .Values.extraEnv | default (list) }}
          {{- $hasExtraEnv := gt (len $extraEnvList) 0 }}
          {{- $needsRedisEnv := and .Values.redis.enabled (not (hasKey $envMap "PROVENANCE_REDIS_URL")) }}
          {{- if or (gt (len $envMap) 0) $hasExtraEnv $needsRedisEnv }}
          env:
            {{- range $key, $value := $envMap }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            {{- if $needsRedisEnv }}
            - name: PROVENANCE_REDIS_URL
              value: "redis://{{ include "provenance.redisFullname" . }}:{{ .Values.redis.service.port }}/0"
            {{- end }}
            {{- range $extraEnvList }}
            - name: {{ .name }}
              value: "{{ .value }}"
            {{- end }}
          {{- end }}
          {{- with .Values.extraEnvFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.extraVolumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
